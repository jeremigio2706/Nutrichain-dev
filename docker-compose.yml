version: "3.8"

services:
  #--------------------------------
  # Stack de Logging (Loki + Promtail)
  #--------------------------------
  loki:
    image: grafana/loki:2.9.0
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - nutrichain-net

  promtail:
    image: grafana/promtail:2.9.0
    container_name: promtail
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./promtail-config.yml:/etc/promtail/config.yml:ro
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    networks:
      - nutrichain-net

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=password
    depends_on:
      - loki
    networks:
      - nutrichain-net

  #--------------------------------
  # Servicios de la Aplicaci칩n
  #--------------------------------
  redis:
    image: redis:7-alpine
    container_name: nutrichain_redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - nutrichain_redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    networks:
      - nutrichain-net
    logging:
      driver: "json-file"
      options:
        max-size: "10m"

  db:
    image: postgres:13
    container_name: nutrichain_db_instance # Renombrado para aclarar que es la instancia
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      # Variable que nuestro script usar치 para crear las bases de datos
      POSTGRES_MULTIPLE_DBS: catalogo_db,almacen_db,tienda_db,reportes_db
    ports:
      - "5432:5432"
    volumes:
      - nutrichain_db_data:/var/lib/postgresql/data
      # Montamos el script de inicializaci칩n en el directorio correcto de PostgreSQL
      - ./postgres/init-multiple-dbs.sh:/docker-entrypoint-initdb.d/init-multiple-dbs.sh
    networks:
      - nutrichain-net

  catalogo-service:
    build:
      context: ./catalogo-service
      dockerfile: Dockerfile
    container_name: catalogo_service
    ports:
      - "8000:80"
    volumes:
      - ./catalogo-service:/var/www/html
    depends_on:
      - db
    environment:
      DATABASE_URL: "pgsql://user:password@db:5432/catalogo_db"
      ENVIRONMENT: "development"
      DEBUG: "true"
    networks:
      - nutrichain-net
    logging:
      driver: "json-file"
      options:
        max-size: "10m"

  almacen-service:
    build:
      context: ./almacen-service
      dockerfile: Dockerfile
    container_name: almacen_service
    ports:
      - "8001:8000"
    volumes:
      - ./almacen-service:/app
    depends_on:
      - db
    environment:
      DATABASE_URL: "postgresql://user:password@db:5432/almacen_db"
      CATALOGO_SERVICE_URL: "http://catalogo-service:80/api"
      ENVIRONMENT: "development"
      DEBUG: "true"
    networks:
      - nutrichain-net
    logging:
      driver: "json-file"
      options:
        max-size: "10m"

  tienda-service:
    build:
      context: ./tienda-service
      dockerfile: Dockerfile
    container_name: tienda_service
    ports:
      - "8003:8003"
    volumes:
      - ./tienda-service:/app
    depends_on:
      - db
      - redis
      - almacen-service
      - catalogo-service
    environment:
      DATABASE_URL: "postgresql://user:password@db:5432/tienda_db"
      ALMACEN_SERVICE_URL: "http://almacen-service:8000"
      CATALOGO_SERVICE_URL: "http://catalogo-service:80"
      REDIS_URL: "redis://redis:6379/0"
      ENVIRONMENT: "development"
      DEBUG: "true"
    networks:
      - nutrichain-net
    logging:
      driver: "json-file"
      options:
        max-size: "10m"

  reportes-service:
    build:
      context: ./reportes-service
      dockerfile: Dockerfile
    container_name: reportes_service
    ports:
      - "8002:8002"
    volumes:
      - ./reportes-service:/app
    depends_on:
      - db
      - redis
      - almacen-service
      - catalogo-service
      - tienda-service
    environment:
      DATABASE_URL: "postgresql://user:password@db:5432/reportes_db"
      ALMACEN_SERVICE_URL: "http://almacen-service:8000"
      CATALOGO_SERVICE_URL: "http://catalogo-service:80"
      TIENDA_SERVICE_URL: "http://tienda-service:8003"
      REDIS_URL: "redis://redis:6379/2"
      ENVIRONMENT: "development"
      DEBUG: "true"
      LOG_LEVEL: "INFO"
    networks:
      - nutrichain-net
    logging:
      driver: "json-file"
      options:
        max-size: "10m"

# Definici칩n de la red
networks:
  nutrichain-net:
    driver: bridge

volumes:
  nutrichain_db_data:
  nutrichain_redis_data:
